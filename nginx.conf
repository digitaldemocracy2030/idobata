worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Define upstreams for each service
    upstream idea_backend_service {
        server idea-backend-dev:3000; # As defined in docker-compose
    }

    upstream policy_frontend_service {
        server policy-frontend-dev:5173; # Container port for policy-frontend
    }

    upstream policy_backend_service {
        server policy-backend-dev:3001; # As defined in docker-compose
    }

    upstream frontend_service {
        server frontend-dev:5173; # As defined in docker-compose
    }

    upstream admin_service {
        server admin-dev:5175; # As defined in docker-compose
    }

    upstream python_embedding_service {
        server idobata-python-service:8000; # As defined in docker-compose
    }

    server {
        listen 80;
        server_name your_production_domain.com www.your_production_domain.com; # Replace with your actual domain

        # Redirect HTTP to HTTPS (uncomment when SSL is configured)
        # location / {
        #     return 301 https://$host$request_uri;
        # }

        # Health check endpoint (optional)
        location /health {
            access_log off;
            return 200 "OK";
            add_header Content-Type text/plain;
        }
    }

    # Uncomment and configure this server block when you have SSL certificates
    # server {
    #     listen 443 ssl http2;
    #     server_name your_production_domain.com www.your_production_domain.com; # Replace with your actual domain

    #     ssl_certificate /etc/nginx/certs/your_production_domain.com.fullchain.pem; # Path to your SSL fullchain certificate
    #     ssl_certificate_key /etc/nginx/certs/your_production_domain.com.privkey.pem; # Path to your SSL private key

    #     # SSL Ciphers and Protocols (example, adjust based on security best practices)
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_prefer_server_ciphers on;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    #     # HSTS (HTTP Strict Transport Security)
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location / {
            proxy_pass http://frontend_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /api/idea/ {
            rewrite ^/api/idea/(.*)$ /$1 break; # Remove /api/idea prefix
            proxy_pass http://idea_backend_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /policy/ {
            # For Vite dev server, ensure WebSocket connections are proxied
            proxy_pass http://policy_frontend_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /api/policy/ {
            rewrite ^/api/policy/(.*)$ /$1 break; # Remove /api/policy prefix
            proxy_pass http://policy_backend_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /admin/ {
            # For Vite dev server, ensure WebSocket connections are proxied
            proxy_pass http://admin_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /api/python/ {
            rewrite ^/api/python/(.*)$ /$1 break; # Remove /api/python prefix
            proxy_pass http://python_embedding_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Add other specific locations if needed, e.g., for static assets
        # location /static/ {
        #     alias /path/to/your/static/files/;
        #     expires 1d;
        # }
    # } # End of HTTPS server block
}