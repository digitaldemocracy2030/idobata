services:
  idea-backend:
    container_name: idea-backend-dev
    build:
      context: .
      dockerfile: idea-discussion/backend/Dockerfile.dev
    volumes:
      - ./idea-discussion/backend:/app
      # Explicitly exclude node_modules from the host mount
      - /app/node_modules
      # Add a named volume for node_modules to persist between container restarts
      - idea_backend_node_modules:/app/node_modules
    ports:
      - "3000:3000" # Expose backend API port
    depends_on:
      - mongo
    env_file:
      - .env # Load environment variables from .env file
    environment:
      - NODE_ENV=development
      # Override MONGODB_URI for Docker network
      - MONGODB_URI=mongodb://mongo:27017/idea_discussion_db # Use service name 'mongo'
      # Explicitly pass GitHub and OpenRouter variables from .env
      - GITHUB_APP_ID=${GITHUB_APP_ID}
      - GITHUB_INSTALLATION_ID=${GITHUB_INSTALLATION_ID}
      - GITHUB_TARGET_OWNER=${GITHUB_TARGET_OWNER}
      - GITHUB_TARGET_REPO=${GITHUB_TARGET_REPO}
      - GITHUB_BASE_BRANCH=${GITHUB_BASE_BRANCH}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - IDEA_CORS_ORIGIN=${IDEA_CORS_ORIGIN}
    command: npm run dev # Command defined in Dockerfile.dev, but explicit here

  # --- policy-edit ---
  policy-frontend:
    container_name: policy-frontend-dev
    image: node:20-alpine # Use a base image, Vite runs on host via volume mount
    working_dir: /app
    volumes:
      - ./policy-edit/frontend:/app
      # Add node_modules volume
      - /app/node_modules
    ports:
      - "5174:5173" # Expose Vite dev server port (Host: 5174, Container: 5173)
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0" # Install deps if needed and run dev server
    env_file:
      - .env # Load environment variables from .env file
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=${POLICY_FRONTEND_API_BASE_URL} # Use variable from .env
      # Map GITHUB_TARGET_* from .env to VITE_GITHUB_* for the frontend
      - VITE_GITHUB_REPO_OWNER=${GITHUB_TARGET_OWNER}
      - VITE_GITHUB_REPO_NAME=${GITHUB_TARGET_REPO}
      - VITE_POLICY_FRONTEND_ALLOWED_HOSTS=${VITE_POLICY_FRONTEND_ALLOWED_HOSTS}

  policy-backend:
    container_name: policy-backend-dev
    build:
      context: . # Change context to the root directory
      dockerfile: ./policy-edit/backend/Dockerfile # Specify Dockerfile path relative to new context
      target: production # Build the production stage
    ports:
      - "3001:3001" # Expose backend API port
    env_file:
      - .env # Load environment variables from .env file
    environment:
      - NODE_ENV=development
      # Ensure CORS allows the frontend origin (running on host port 5174)
      - POLICY_CORS_ORIGIN=${POLICY_CORS_ORIGIN}
    # Run the production start command
    command: npm start

  # --- Unified Frontend ---
  frontend:
    container_name: frontend-dev
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
      # Add node_modules volume
      - /app/node_modules
    ports:
      - "5173:5173" # idea-discussion/backendのCORS設定に合わせたポート
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=${IDEA_FRONTEND_API_BASE_URL} # 初期段階ではidea-discussionのAPIを使用
      - VITE_FRONTEND_ALLOWED_HOSTS=${VITE_FRONTEND_ALLOWED_HOSTS}

  # --- Database ---
  mongo:
    container_name: mongo-dev
    image: mongo:latest
    ports:
      - "27017:27017" # Expose MongoDB port to host (optional, for external tools)
    volumes:
      - mongo_data:/data/db # Persist data using a named volume

  # --- Admin Panel ---
  admin:
    container_name: admin-dev
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./admin:/app
      - /app/node_modules
    ports:
      - "5175:5173" # 他のサービスとポートが重複しないようにする
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:3000 # idea-discussionバックエンドを指す

volumes:
  mongo_data: # Define the named volume for MongoDB
  idea_backend_node_modules: # Define the named volume for idea-backend node_modules
  # Removed node_modules volumes as they are part of the production image
